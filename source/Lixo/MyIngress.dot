digraph MyIngress {
subgraph cluster {
graph [
fontsize="22pt", label=MyIngress, style=bold];
0[label=__START__, margin="", shape=rectangle, style=solid];
1[label=__EXIT__, margin="", shape=rectangle, style=solid];
2[label="PKT_TO_ROUTER_0/PKT_TO_RO...", margin="", shape=rectangle, style=solid];
3[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=rounded];
4[label=ipv4_lpm_0, margin="", shape=ellipse, style=solid];
5[label="lpm: hdr.ipv4.dstAddr\n", margin="", shape=rectangle, style=rounded];
6[label=ipv4_forward, margin="", shape=ellipse, style=solid];
7[label="standard_metadata.egress_...\n...\nhdr.ipv4.ttl = hdr.ipv4.t...", margin="", shape=rectangle, style=solid];
8[label=my_router, margin="", shape=ellipse, style=solid];
9[label="PKT_TO_ROUTER_0/PKT_TO_RO...", margin="", shape=rectangle, style=solid];
10[label=drop, margin="", shape=ellipse, style=solid];
11[label="mark_to_drop(standard_met...", margin="", shape=rectangle, style=solid];
12[label=NoAction_1, margin="", shape=ellipse, style=solid];
13[label="hdr.ipv4.ttl == 0;", margin="", shape=rectangle, style=rounded];
14[label="drop_4/drop();", margin="", shape=rectangle, style=solid];
15[label="standard_metadata.checksum_error == 1;", margin="", shape=rectangle, style=rounded];
16[label="drop_5/drop();", margin="", shape=rectangle, style=solid];
17[label="hdr.icmp.isValid();", margin="", shape=rectangle, style=rounded];
18[label="PKT_TO_ROUTER_0/PKT_TO_ROUTER == 1;", margin="", shape=rectangle, style=rounded];
19[label="hdr.icmp.type == 8;", margin="", shape=rectangle, style=rounded];
20[label="icmp_forward();", margin="", shape=rectangle, style=solid];
21[label="icmp_ping();", margin="", shape=rectangle, style=solid];
22[label="hdr.arp.isValid();", margin="", shape=rectangle, style=rounded];
23[label="hdr.arp.op == 1;", margin="", shape=rectangle, style=rounded];
24[label="arp_exact_0/arp_exact.apply().miss;", margin="", shape=rectangle, style=rounded];
25[label="multicast();", margin="", shape=rectangle, style=solid];
26[label="hdr.arp.op == 2;", margin="", shape=rectangle, style=rounded];
27[label=arp_rp_0, margin="", shape=ellipse, style=solid];
28[label="lpm: hdr.arp.d_ip\n", margin="", shape=rectangle, style=rounded];
29[label=arp_forward, margin="", shape=ellipse, style=solid];
30[label="standard_metadata.egress_...", margin="", shape=rectangle, style=solid];
31[label=drop_3, margin="", shape=ellipse, style=solid];
32[label="mark_to_drop(standard_met...", margin="", shape=rectangle, style=solid];
33[label=NoAction_3, margin="", shape=ellipse, style=solid];
0 -> 2[label=""];
2 -> 3[label=""];
3 -> 4[label=TRUE];
3 -> 22[label=FALSE];
4 -> 5[label=""];
5 -> 6[label=""];
5 -> 8[label=""];
5 -> 10[label=""];
5 -> 12[label=""];
6 -> 7[label=""];
7 -> 13[label=""];
8 -> 9[label=""];
9 -> 13[label=""];
10 -> 11[label=""];
11 -> 13[label=""];
12 -> 13[label=""];
13 -> 14[label=TRUE];
13 -> 15[label=FALSE];
14 -> 15[label=""];
15 -> 16[label=TRUE];
15 -> 17[label=FALSE];
16 -> 17[label=""];
17 -> 18[label=TRUE];
17 -> 1[label=FALSE];
18 -> 19[label=TRUE];
18 -> 1[label=FALSE];
19 -> 20[label=TRUE];
19 -> 21[label=FALSE];
20 -> 21[label=""];
21 -> 1[label=""];
22 -> 23[label=TRUE];
22 -> 1[label=FALSE];
23 -> 24[label=TRUE];
23 -> 26[label=FALSE];
24 -> 25[label=TRUE];
24 -> 1[label=FALSE];
25 -> 1[label=""];
26 -> 27[label=TRUE];
26 -> 1[label=FALSE];
27 -> 28[label=""];
28 -> 29[label=""];
28 -> 31[label=""];
28 -> 33[label=""];
29 -> 30[label=""];
30 -> 1[label=""];
31 -> 32[label=""];
32 -> 1[label=""];
33 -> 1[label=""];
}
}
